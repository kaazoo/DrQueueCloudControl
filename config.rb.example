module DQCCconfig

  # for ip lookup
  require 'socket'

  # for hash computation
  require 'digest/md5'

  # for Base64 encoding
  require 'base64'

  # for DrQueue control
  require 'drqueue'

  # for database connectivity
  require 'active_record'

  # for EC2 control
  require 'AWS'


  # database functionality
  require 'db_func'
  include DQCCdb

  # DrQueue functionality
  require 'queue_func'
  include DQCCqueue

  # cloud functionality
  require 'cloud_func'
  include DQCCcloud


  # find out local ip address
  def self.local_ip
    orig, Socket.do_not_reverse_lookup = Socket.do_not_reverse_lookup, true  # turn off reverse DNS resolution temporarily

    UDPSocket.open do |s|
      s.connect '64.233.187.99', 1
      s.addr.last
    end
  ensure
    Socket.do_not_reverse_lookup = orig
  end


  # sleep time for daemon
  attr :sleep_interval
  @sleep_interval = 10

  # parking pool for waiting slaves
  attr :parking_pool
  @parking_pool = "garage"

  # maximum parking time
  attr :park_time
  @park_time = 600

  # maximum number of VMs
  attr :max_vms
  @max_vms = 20

  # available render pool types
  attr :pool_types
  @pool_types = ['blender', 'maya', 'cinema4d']

  # DQOR database type
  attr :db_dqor_adapter
  @db_dqor_adapter = "mysql"
  # DQOR database name
  attr :db_dqor_name
  @db_dqor_name = "drqueueonrails"
  # DQOR database username
  attr :db_dqor_user
  @db_dqor_user = "dqcc"
  # DQOR database password
  attr :db_dqor_pw
  @db_dqor_pw = "foobar"
  # DQOR database hostname
  attr :db_dqor_host
  @db_dqor_host = "localhost"

  # DrQueue environment
  ENV['DRQUEUE_MASTER'] ||= '127.0.0.1'
  ENV['DRQUEUE_ROOT'] ||= '/usr/local/drqueue'
  ENV['DRQUEUE_MASTER_FOR_VMS'] ||= '10.1.0.1'

  # EC2 environment
  ENV['AMAZON_ACCESS_KEY_ID'] ||= 'YOUR_ACCESS_KEY_ID'
  ENV['AMAZON_SECRET_ACCESS_KEY'] ||= 'YOUR_SECRET_ACCESS_KEY_ID'
  ENV['EC2_URL'] ||= 'https://eu-west-1.ec2.amazonaws.com'
  ENV['EC2_SLAVE_AMI'] ||= 'ami-9999999999'
  ENV['EC2_KEY_NAME'] ||= 'mykey'
  ENV['EC2_INSTANCE_TYPE'] ||= 't1.micro'
  ENV['EC2_AVAIL_ZONE'] ||= 'eu-west-1a'
  ENV['EC2_SEC_GROUP'] ||= 'mysecgroup'


end
